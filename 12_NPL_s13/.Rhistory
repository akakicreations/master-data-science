library(tidyverse)
library(dslabs)
library(devtools)
install.packages("devtools")
library(devtools)
library(devtools)
library(ggplot2)
library(tidyverse)
library(dslabs)
library(rvest)
install.packages("rvest")
install.packages("janitor")
library(devtools)
library(tidyverse)
library(dslabs)
install.packages("ggplot2movies")
library(ggplot2movies)
library(devtools)
library(rvest)
library(janitor)
install.packages("gapminder")
library(tidyverse)
library(dslabs)
library(devtools)
library(rvest)
library(janitor)
library(ggplot2movies)
library(dslabs)
data(gapminder)
force(gapminder)
shape(gapminder)
summary(gapminder)
head(gapminder)
str(gapminder)
library(dplyr)
gapminder %>% filter (year == 2015 & country %in% c('Sri Lanka','Turkey')) %>% select(country, infant_mortality)
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality)
gapminder %>% filter (year == 2015) %>% sot(select(country, infant_mortality), decreasing = TRUE)
gapminder %>% filter (year == 2015) %>% sort(select(country, infant_mortality), decreasing = TRUE)
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% sort(decreasing = TRUE)
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% sort()
? sort
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% sort(infant_mortality, decreasing = FALSE)
gapminder %>% filter (year == 2015) %>% sort(x, decreasing = FALSE, ...) %>% select(country, infant_mortality)
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% order()
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% order(gapminder$infant_mortality)
gapminder %>% filter (year == 2015) %>% order(select(country, infant_mortality))
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% arrange(infant_mortality)
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% desc(infant_mortality)
gapminder %>% filter (year == 2015) %>% select(country, infant_mortality) %>% arrange(desc(infant_mortality))
library(dslabs)
data(heights)
head(heights)
str(heights)
heights.summary<-heights %>%
filter(sex == "Female") %>%
summarize(
average = mean(height),
standard_deviation = sd(height)
)
heights.summary
heights %>%
group_by(sex)
head(heights)
heights %>%
group_by(height)
heights %>%
group_by(sex) %>%
summarize(
average = mean(height),
standard_deviation = sd(height)
)
heights %>%
group_by(sex) %>%
summarize()
heights %>%
group_by(sex) %>%
summarize(heights)
url="https://en.wikipedia.org/wiki/List_of_countries_by_intentional_homicide_rate"
h <- read_html(url)
class(h)
h
tab <- h %>% html_nodes("table")
head(tab)
tab <- tab[[4]] %>% html_table
head(tab)
tab <- tab %>%
select(starts_with("Country"),
Region,Count,Rate,starts_with("Year")) %>%
setNames(c("country", "continent", "total", "murder_rate","year"))
head(tab)
s <- murders %>%
mutate(rate=total/population*100000) %>%
summarize(average=mean(rate))%>%
.$average
s
s <- murders %>%
mutate(rate=total/population*100000) %>%
summarize(average=mean(rate))%>%
s
s <- murders %>%
mutate(rate=total/population*100000) %>%
summarize(average=mean(rate))
s
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dslabs)
library(devtools)
library(rvest)
library(janitor)
library(ggplot2movies)
#options(encoding = 'UTF-8')
tab_USA<-tab %>%
filter(year=="2015") %>%
select(-year) %>%
add_row(country = "USA",
continent = "Americas",
total = s2,
murder_rate=s)
s2<-murders %>%
summarize(total=sum(total)) %>%
.$total
s2
tab_USA<-tab %>%
filter(year=="2015") %>%
select(-year) %>%
add_row(country = "USA",
continent = "Americas",
total = s2,
murder_rate=s)
tab_USA
install.packages("languageserver")
library(languageserver)
install.packages("readxl")
library(readxl)
library(httr)
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-",format(Sys.time(), "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
data <- read_excel(tf)
#create the URL where the dataset is stored with automatic updates every day
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-",format(Sys.time(), "%Y-%m-%d"), ".xlsx", sep = "")
#download the dataset from the website to a local temporary file
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
#read the Dataset sheet into “R”
data <- read_excel(tf)
setwd("~/PROYECTOS/REPOS/REPOS-Github/master-data-science/12_NPL_s13")
python3 -m venv nlp
